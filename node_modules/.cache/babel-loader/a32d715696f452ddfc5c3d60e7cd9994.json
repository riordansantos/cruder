{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\riord\\\\cruder\\\\src\\\\pages\\\\Edit\\\\edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport Header from \"../../components/Header/Header\";\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationPost = yup.object().shape({\n  title: yup.string().required(\"O campo é obrigatório\").max(40, \"O campo pode ter no máximo 40 caracteres\"),\n  description: yup.string().required(\"O campo é obrigatório\").max(150, \"O campo pode ter no máximo 150 caracteres\"),\n  content: yup.string().required(\"O campo é obrigatório\").max(500, \"O campo pode ter no máximo 500 caracteres\")\n});\n\nfunction Edit() {\n  _s();\n\n  var _errors$title, _errors$description, _errors$content;\n\n  let history = useHistory();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    axios.get(`https://upload-my-api.herokuapp.com/post/${id}`).then(response => {\n      reset(response.data);\n    }).catch(() => {\n      console.log(\"deu errado\");\n    });\n  }, []);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm({\n    resolver: yupResolver(validationPost)\n  });\n\n  const addPost = data => axios.put(`https://upload-my-api.herokuapp.com/post/edit/${id}`, data).then(() => {\n    console.log(\"deu certo\");\n    history.push(\"/\");\n  }).catch(() => {\n    console.log(\"Ocorreu um erro\");\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Criar postagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body-post\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(addPost),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"T\\xEDtulo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"title\",\n                ...register(\"title\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Descri\\xE7\\xE3o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"description\",\n                ...register(\"description\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Conte\\xFAdo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                name: \"content\",\n                ...register(\"content\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: (_errors$content = errors.content) === null || _errors$content === void 0 ? void 0 : _errors$content.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-post\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Enviar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Edit, \"JkPBMXP/Tc9mt/TCYwcN+SmuMiM=\", false, function () {\n  return [useHistory, useParams, useForm];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["C:/Users/riord/cruder/src/pages/Edit/edit.js"],"names":["React","useEffect","axios","Header","useForm","yupResolver","yup","useHistory","useParams","validationPost","object","shape","title","string","required","max","description","content","Edit","history","id","get","then","response","reset","data","catch","console","log","register","handleSubmit","formState","errors","resolver","addPost","put","push","message"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport {useForm} from 'react-hook-form';\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\n\r\n\r\nconst validationPost = yup.object().shape({\r\n    title: yup.string().required(\"O campo é obrigatório\").max(40, \"O campo pode ter no máximo 40 caracteres\"),\r\n    description: yup.string().required(\"O campo é obrigatório\").max(150, \"O campo pode ter no máximo 150 caracteres\"),\r\n    content: yup.string().required(\"O campo é obrigatório\").max(500, \"O campo pode ter no máximo 500 caracteres\"),\r\n})\r\nfunction Edit() {\r\n\r\n  let history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://upload-my-api.herokuapp.com/post/${id}`)\r\n      .then((response) => {\r\n        reset(response.data);\r\n      })\r\n      .catch(() => {\r\n        console.log(\"deu errado\");\r\n      });\r\n  }, []);\r\n\r\n  const { register, handleSubmit, formState: { errors}, reset} = useForm({\r\n      resolver: yupResolver(validationPost)\r\n  });\r\n\r\n  const addPost = data => axios.put(`https://upload-my-api.herokuapp.com/post/edit/${id}`, data)\r\n  .then(() => {\r\n      console.log(\"deu certo\")\r\n      history.push(\"/\");\r\n  })\r\n  .catch(() => {\r\n      console.log(\"Ocorreu um erro\")\r\n  })\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <main>\r\n        <div className=\"card-post\">\r\n          <h1>Criar postagem</h1>\r\n          <div className=\"line-post\"></div>\r\n\r\n          <div className=\"card-body-post\">\r\n            <form onSubmit={handleSubmit(addPost)}>\r\n              <div className=\"fields\">\r\n                <label>Título</label>\r\n                <input type=\"text\" name=\"title\" {...register(\"title\")}/>\r\n                <p className=\"error-message\">{errors.title?.message}</p>\r\n              </div>\r\n\r\n              <div className=\"fields\">\r\n                <label>Descrição</label>\r\n                <input type=\"text\" name=\"description\" {...register(\"description\")}/>\r\n                <p className=\"error-message\">{errors.description?.message}</p>\r\n\r\n              </div>\r\n\r\n              <div className=\"fields\">\r\n                <label>Conteúdo</label>\r\n                <textarea type=\"text\" name=\"content\" {...register(\"content\")}></textarea>\r\n                <p className=\"error-message\">{errors.content?.message}</p>\r\n\r\n              </div>\r\n\r\n              <div className=\"btn-post\">\r\n                <button type=\"submit\">Enviar</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Edit;\r\n"]},"metadata":{},"sourceType":"module"}
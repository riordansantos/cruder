{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\riord\\\\cruder\\\\src\\\\pages\\\\Post\\\\post.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport \"./post.css\";\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationPost = yup.object().shape({\n  title: yup.string().required(\"O campo é obrigatório\").max(40, \"O campo pode ter no máximo 40 caracteres\"),\n  description: yup.string().required(\"O campo é obrigatório\").max(150, \"O campo pode ter no máximo 150 caracteres\"),\n  content: yup.string().required(\"O campo é obrigatório\").max(500, \"O campo pode ter no máximo 500 caracteres\")\n});\n\nfunction Post() {\n  _s();\n\n  var _errors$title, _errors$description, _errors$content;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationPost)\n  });\n\n  const addPost = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Criar postagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body-post\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(addPost),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"T\\xEDtulo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"title\",\n                ...register(\"title\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Descri\\xE7\\xE3o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"description\",\n                ...register(\"description\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Conte\\xFAdo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                name: \"content\",\n                ...register(\"content\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: (_errors$content = errors.content) === null || _errors$content === void 0 ? void 0 : _errors$content.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-post\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Enviar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"bXOtbLmkHSjJKq4w+mzYpNXL+0c=\", false, function () {\n  return [useForm];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/riord/cruder/src/pages/Post/post.js"],"names":["React","Header","useForm","yupResolver","yup","validationPost","object","shape","title","string","required","max","description","content","Post","register","handleSubmit","formState","errors","resolver","addPost","data","console","log","message"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport \"./post.css\";\r\nimport {useForm} from 'react-hook-form';\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationPost = yup.object().shape({\r\n    title: yup.string().required(\"O campo é obrigatório\").max(40, \"O campo pode ter no máximo 40 caracteres\"),\r\n    description: yup.string().required(\"O campo é obrigatório\").max(150, \"O campo pode ter no máximo 150 caracteres\"),\r\n    content: yup.string().required(\"O campo é obrigatório\").max(500, \"O campo pode ter no máximo 500 caracteres\"),\r\n})\r\nfunction Post() {\r\n\r\n    const { register, handleSubmit, formState: { errors}} = useForm({\r\n        resolver: yupResolver(validationPost)\r\n    });\r\n\r\n    const addPost = data => console.log(data)\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <main>\r\n        <div className=\"card-post\">\r\n          <h1>Criar postagem</h1>\r\n          <div className=\"line-post\"></div>\r\n\r\n          <div className=\"card-body-post\">\r\n            <form onSubmit={handleSubmit(addPost)}>\r\n              <div className=\"fields\">\r\n                <label>Título</label>\r\n                <input type=\"text\" name=\"title\" {...register(\"title\")}/>\r\n                <p className=\"error-message\">{errors.title?.message}</p>\r\n              </div>\r\n\r\n              <div className=\"fields\">\r\n                <label>Descrição</label>\r\n                <input type=\"text\" name=\"description\" {...register(\"description\")}/>\r\n                <p className=\"error-message\">{errors.description?.message}</p>\r\n\r\n              </div>\r\n\r\n              <div className=\"fields\">\r\n                <label>Conteúdo</label>\r\n                <textarea type=\"text\" name=\"content\" {...register(\"content\")}></textarea>\r\n                <p className=\"error-message\">{errors.content?.message}</p>\r\n\r\n              </div>\r\n\r\n              <div className=\"btn-post\">\r\n                <button type=\"submit\">Enviar</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}